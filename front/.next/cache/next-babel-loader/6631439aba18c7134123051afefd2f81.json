{"ast":null,"code":"//saga의 이펙트들\nimport { all, fork } from 'redux-saga/effects'; //take는 evnetlistener와 비슷\n// takeLeading - 매번 누를때 첫번째 응답만 반환\n// takeLatest - 매번 누를떄 마지막 응답만 반환\n// throttle - 아에 반복 요청이 안가도록 막아줌\n// (takeLatest, takeLeading과 다르게 백엔드에서 여러번 요청되었나 검사할 필요 없음)\n//fork는 응답을 기다리지 않는다\n//call은 응답을 기다린다\n\nimport postSaga from './post';\nimport userSaga from './user';\nexport default function* rootSaga() {\n  yield all([fork(userSaga), fork(postSaga)]);\n}","map":{"version":3,"sources":["C:/code/Twitter/front/sagas/index.js"],"names":["all","fork","postSaga","userSaga","rootSaga"],"mappings":"AAAA;AACA,SAASA,GAAT,EAAcC,IAAd,QAA0B,oBAA1B,C,CAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;AACA,OAAOC,QAAP,MAAqB,QAArB;AACA,OAAOC,QAAP,MAAqB,QAArB;AAEA,eAAe,UAAUC,QAAV,GAAqB;AAClC,QAAMJ,GAAG,CAAC,CAACC,IAAI,CAACE,QAAD,CAAL,EAAiBF,IAAI,CAACC,QAAD,CAArB,CAAD,CAAT;AACD","sourcesContent":["//saga의 이펙트들\r\nimport { all, fork } from 'redux-saga/effects';\r\n\r\n//take는 evnetlistener와 비슷\r\n// takeLeading - 매번 누를때 첫번째 응답만 반환\r\n// takeLatest - 매번 누를떄 마지막 응답만 반환\r\n// throttle - 아에 반복 요청이 안가도록 막아줌\r\n// (takeLatest, takeLeading과 다르게 백엔드에서 여러번 요청되었나 검사할 필요 없음)\r\n\r\n//fork는 응답을 기다리지 않는다\r\n//call은 응답을 기다린다\r\nimport postSaga from './post';\r\nimport userSaga from './user';\r\n\r\nexport default function* rootSaga() {\r\n  yield all([fork(userSaga), fork(postSaga)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}