{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar initialState = {\n  logInLoading: false,\n  //로그인 시도중\n  logInDone: false,\n  logInError: null,\n  logOutLoading: false,\n  //로그아웃 시도중\n  logOutDone: false,\n  logOutError: null,\n  signUpLoading: false,\n  //회원가입 시도중\n  signUpDone: false,\n  signUpError: null,\n  changeNicknameLoading: false,\n  //닉네임 시도중\n  changeNicknameDone: false,\n  changeNicknameError: null,\n  me: null,\n  signUpData: {},\n  loginData: {}\n}; //redux-thunk\n\nexport var loginAction = function loginAction(data) {\n  return function (dispatch, getState) {\n    //initial State인 getState();\n    var state = getState();\n    dispatch(loginRequestAction());\n    axios.post(\"/api/login\").then(function (res) {\n      dispatch(loginSuccessAction(res.data));\n    })[\"catch\"](function (err) {\n      dispatch(loginFailureAction(err));\n    });\n  };\n};\nexport var LOG_IN_REQUEST = \"LOG_IN_REQUEST\";\nexport var LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\";\nexport var LOG_IN_FAILURE = \"LOG_IN_FAILURE\";\nexport var LOG_OUT_REQUEST = \"LOG_IN_REQUEST\";\nexport var LOG_OUT_SUCCESS = \"LOG_IN_SUCCESS\";\nexport var LOG_OUT_FAILURE = \"LOG_OUT_FAILURE\";\nexport var SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\nexport var SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\nexport var SIGN_UP_FAILURE = \"SIGN_UP_FAILURE\";\nexport var CHANGE_NICKNAME_REQUEST = \"CHANGE_NICKNAME_REQUEST\";\nexport var CHANGE_NICKNAME_SUCCESS = \"CHANGE_NICKNAME_SUCCESS\";\nexport var CHANGE_NICKNAME_FAILURE = \"CHANGE_NICKNAME_FAILURE\";\nexport var FOLLOW_REQUEST = \"FOLLOW_REQUEST\";\nexport var FOLLOW_SUCCESS = \"FOLLOW_SUCCESS\";\nexport var FOLLOW_FAILURE = \"FOLLOW_FAILURE\";\nexport var UNFOLLOW_REQUEST = \"UNFOLLOW_REQUEST\";\nexport var UNFOLLOW_SUCCESS = \"UNFOLLOW_SUCCESS\";\nexport var UNFOLLOW_FAILURE = \"UNFOLLOW_FAILURE\";\nexport var ADD_POST_TO_ME = \"ADD_POST_TO_ME\";\nexport var REMOVE_POST_TO_ME = \"REMOVE_POST_TO_ME\"; ////// LOGIN 액션\n\nexport var loginRequestAction = function loginRequestAction(data) {\n  return {\n    type: LOG_IN_REQUEST,\n    data: data\n  };\n};\nexport var loginSuccessAction = function loginSuccessAction(data) {\n  return {\n    type: LOG_IN_SUCCESS,\n    data: data\n  };\n};\nexport var loginFailureAction = function loginFailureAction(data) {\n  return {\n    type: LOG_IN_FAILURE,\n    data: data\n  };\n}; ////// LOGOUT 액션\n\nexport var logoutRequestAction = function logoutRequestAction(data) {\n  return {\n    type: LOG_OUT_REQUEST,\n    data: data\n  };\n};\nexport var logoutSuccessAction = function logoutSuccessAction(data) {\n  return {\n    type: LOG_OUT_SUCCESS,\n    data: data\n  };\n};\nexport var logoutFailureAction = function logoutFailureAction(data) {\n  return {\n    type: LOG_OUT_FAILURE,\n    data: data\n  };\n}; // (이전상태, 액션) => 다음상태\n\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logInLoading: true,\n        logInError: null,\n        logInDone: false\n      });\n\n    case LOG_IN_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logInLoading: false,\n        logInDone: true,\n        me: _objectSpread(_objectSpread({}, action.data), {}, {\n          nickname: \"zerocho\",\n          id: 1,\n          Posts: [],\n          Followings: [],\n          Followers: []\n        })\n      });\n\n    case LOG_IN_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logInLoading: false,\n        logInError: action.error\n      });\n\n    case LOG_OUT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logOutLoading: true,\n        logOutDone: false,\n        logOutError: null\n      });\n\n    case LOG_OUT_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logOutLoading: false,\n        logOutDone: true,\n        me: null\n      });\n\n    case LOG_OUT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logOutLoading: false,\n        logOutError: action.error\n      });\n\n    case SIGN_UP_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        signUpLoading: true,\n        signUpDone: false,\n        signUpError: null\n      });\n\n    case SIGN_UP_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        signUpLoading: false,\n        signUpDone: true\n      });\n\n    case SIGN_UP_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        signUpLoading: false,\n        signUpError: action.error\n      });\n\n    case CHANGE_NICKNAME_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        changeNicknameLoading: true,\n        changeNicknameDone: false,\n        changeNicknameError: null\n      });\n\n    case CHANGE_NICKNAME_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        changeNicknameLoading: false,\n        changeNicknameDone: true\n      });\n\n    case CHANGE_NICKNAME_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        changeNicknameLoading: false,\n        changeNicknameError: action.error\n      });\n\n    case ADD_POST_TO_ME:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        me: _objectSpread(_objectSpread({}, state.me), {}, {\n          Posts: [{\n            id: action.data\n          }].concat(_toConsumableArray(state.me.Posts))\n        })\n      });\n\n    case REMOVE_POST_OF_ME:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        me: _objectSpread(_objectSpread({}, state.me), {}, {\n          Posts: state.me.Posts.filter(function (v) {\n            return v.id !== action.data;\n          })\n        })\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/code/Twitter/front/reducers/user.js"],"names":["initialState","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","signUpLoading","signUpDone","signUpError","changeNicknameLoading","changeNicknameDone","changeNicknameError","me","signUpData","loginData","loginAction","data","dispatch","getState","state","loginRequestAction","axios","post","then","res","loginSuccessAction","err","loginFailureAction","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","ADD_POST_TO_ME","REMOVE_POST_TO_ME","type","logoutRequestAction","logoutSuccessAction","logoutFailureAction","action","nickname","id","Posts","Followings","Followers","error","REMOVE_POST_OF_ME","filter","v"],"mappings":"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","sourcesContent":["const initialState = {\r\n  logInLoading: false, //로그인 시도중\r\n  logInDone: false,\r\n  logInError: null,\r\n  logOutLoading: false, //로그아웃 시도중\r\n  logOutDone: false,\r\n  logOutError: null,\r\n  signUpLoading: false, //회원가입 시도중\r\n  signUpDone: false,\r\n  signUpError: null,\r\n  changeNicknameLoading: false, //닉네임 시도중\r\n  changeNicknameDone: false,\r\n  changeNicknameError: null,\r\n  me: null,\r\n  signUpData: {},\r\n  loginData: {},\r\n};\r\n\r\n//redux-thunk\r\nexport const loginAction = (data) => {\r\n  return (dispatch, getState) => {\r\n    //initial State인 getState();\r\n    const state = getState();\r\n    dispatch(loginRequestAction());\r\n    axios\r\n      .post(\"/api/login\")\r\n      .then((res) => {\r\n        dispatch(loginSuccessAction(res.data));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(loginFailureAction(err));\r\n      });\r\n  };\r\n};\r\n\r\nexport const LOG_IN_REQUEST = \"LOG_IN_REQUEST\";\r\nexport const LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\";\r\nexport const LOG_IN_FAILURE = \"LOG_IN_FAILURE\";\r\n\r\nexport const LOG_OUT_REQUEST = \"LOG_IN_REQUEST\";\r\nexport const LOG_OUT_SUCCESS = \"LOG_IN_SUCCESS\";\r\nexport const LOG_OUT_FAILURE = \"LOG_OUT_FAILURE\";\r\n\r\nexport const SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\r\nexport const SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\r\nexport const SIGN_UP_FAILURE = \"SIGN_UP_FAILURE\";\r\n\r\nexport const CHANGE_NICKNAME_REQUEST = \"CHANGE_NICKNAME_REQUEST\";\r\nexport const CHANGE_NICKNAME_SUCCESS = \"CHANGE_NICKNAME_SUCCESS\";\r\nexport const CHANGE_NICKNAME_FAILURE = \"CHANGE_NICKNAME_FAILURE\";\r\n\r\nexport const FOLLOW_REQUEST = \"FOLLOW_REQUEST\";\r\nexport const FOLLOW_SUCCESS = \"FOLLOW_SUCCESS\";\r\nexport const FOLLOW_FAILURE = \"FOLLOW_FAILURE\";\r\n\r\nexport const UNFOLLOW_REQUEST = \"UNFOLLOW_REQUEST\";\r\nexport const UNFOLLOW_SUCCESS = \"UNFOLLOW_SUCCESS\";\r\nexport const UNFOLLOW_FAILURE = \"UNFOLLOW_FAILURE\";\r\n\r\nexport const ADD_POST_TO_ME = \"ADD_POST_TO_ME\";\r\nexport const REMOVE_POST_TO_ME = \"REMOVE_POST_TO_ME\";\r\n\r\n////// LOGIN 액션\r\n\r\nexport const loginRequestAction = (data) => {\r\n  return {\r\n    type: LOG_IN_REQUEST,\r\n    data,\r\n  };\r\n};\r\n\r\nexport const loginSuccessAction = (data) => {\r\n  return {\r\n    type: LOG_IN_SUCCESS,\r\n    data,\r\n  };\r\n};\r\n\r\nexport const loginFailureAction = (data) => {\r\n  return {\r\n    type: LOG_IN_FAILURE,\r\n    data,\r\n  };\r\n};\r\n\r\n////// LOGOUT 액션\r\n\r\nexport const logoutRequestAction = (data) => {\r\n  return {\r\n    type: LOG_OUT_REQUEST,\r\n    data,\r\n  };\r\n};\r\n\r\nexport const logoutSuccessAction = (data) => {\r\n  return {\r\n    type: LOG_OUT_SUCCESS,\r\n    data,\r\n  };\r\n};\r\n\r\nexport const logoutFailureAction = (data) => {\r\n  return {\r\n    type: LOG_OUT_FAILURE,\r\n    data,\r\n  };\r\n};\r\n\r\n// (이전상태, 액션) => 다음상태\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOG_IN_REQUEST:\r\n      return {\r\n        ...state,\r\n        logInLoading: true,\r\n        logInError: null,\r\n        logInDone: false,\r\n      };\r\n    case LOG_IN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        logInLoading: false,\r\n        logInDone: true,\r\n        me: {\r\n          ...action.data,\r\n          nickname: \"zerocho\",\r\n          id: 1,\r\n          Posts: [],\r\n          Followings: [],\r\n          Followers: [],\r\n        },\r\n      };\r\n    case LOG_IN_FAILURE:\r\n      return {\r\n        ...state,\r\n        logInLoading: false,\r\n        logInError: action.error,\r\n      };\r\n    case LOG_OUT_REQUEST:\r\n      return {\r\n        ...state,\r\n        logOutLoading: true,\r\n        logOutDone: false,\r\n        logOutError: null,\r\n      };\r\n    case LOG_OUT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        logOutLoading: false,\r\n        logOutDone: true,\r\n        me: null,\r\n      };\r\n    case LOG_OUT_FAILURE:\r\n      return {\r\n        ...state,\r\n        logOutLoading: false,\r\n        logOutError: action.error,\r\n      };\r\n    case SIGN_UP_REQUEST:\r\n      return {\r\n        ...state,\r\n        signUpLoading: true,\r\n        signUpDone: false,\r\n        signUpError: null,\r\n      };\r\n    case SIGN_UP_SUCCESS:\r\n      return {\r\n        ...state,\r\n        signUpLoading: false,\r\n        signUpDone: true,\r\n      };\r\n    case SIGN_UP_FAILURE:\r\n      return {\r\n        ...state,\r\n        signUpLoading: false,\r\n        signUpError: action.error,\r\n      };\r\n    case CHANGE_NICKNAME_REQUEST:\r\n      return {\r\n        ...state,\r\n        changeNicknameLoading: true,\r\n        changeNicknameDone: false,\r\n        changeNicknameError: null,\r\n      };\r\n    case CHANGE_NICKNAME_SUCCESS:\r\n      return {\r\n        ...state,\r\n        changeNicknameLoading: false,\r\n        changeNicknameDone: true,\r\n      };\r\n    case CHANGE_NICKNAME_FAILURE:\r\n      return {\r\n        ...state,\r\n        changeNicknameLoading: false,\r\n        changeNicknameError: action.error,\r\n      };\r\n    case ADD_POST_TO_ME:\r\n      return {\r\n        ...state,\r\n        me: {\r\n          ...state.me,\r\n          Posts: [{ id: action.data }, ...state.me.Posts],\r\n        },\r\n      };\r\n    case REMOVE_POST_OF_ME:\r\n      return {\r\n        ...state,\r\n        me: {\r\n          ...state.me,\r\n          Posts: state.me.Posts.filter((v) => v.id !== action.data),\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}