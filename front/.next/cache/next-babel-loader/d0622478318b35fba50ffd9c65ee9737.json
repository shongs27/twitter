{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar initialState = {\n  isLoggedIn: false,\n  me: null,\n  signUpData: {},\n  loginData: {}\n};\nexport var loginRequestAction = function loginRequestAction(data) {\n  return {\n    type: \"LOG_IN\",\n    data: data\n  };\n};\nexport var logoutRequestAction = function logoutRequestAction() {\n  return {\n    type: \"LOG_OUT\"\n  };\n};\nexport var loginSuccessAction = function loginSuccessAction() {\n  return {\n    type: \"LOG_IN_SUCCESS\"\n  };\n};\nexport var loginFailureAction = function loginFailureAction() {\n  return {\n    type: \"LOG_IN_FAILURE\"\n  };\n};\nexport var logoutSuccessAction = function logoutSuccessAction() {\n  return {\n    type: \"LOG_OUT_SUCCESS\"\n  };\n};\nexport var logoutFailureAction = function logoutFailureAction() {\n  return {\n    type: \"LOG_OUT_FAILURE\"\n  };\n}; // (이전상태, 액션) => 다음상태\n\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"LOG_IN\":\n      return _objectSpread(_objectSpread({}, state.me), {}, {\n        isLoggedIn: true,\n        me: action.data\n      });\n\n    case \"LOG_OUT\":\n      return _objectSpread(_objectSpread({}, state.me), {}, {\n        isLoggedIn: false,\n        me: null\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/code/Twitter/front/reducers/user.js"],"names":["initialState","isLoggedIn","me","signUpData","loginData","loginRequestAction","data","type","logoutRequestAction","loginSuccessAction","loginFailureAction","logoutSuccessAction","logoutFailureAction","state","action"],"mappings":";;;;;;AAAA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,KADO;AAEnBC,EAAAA,EAAE,EAAE,IAFe;AAGnBC,EAAAA,UAAU,EAAE,EAHO;AAInBC,EAAAA,SAAS,EAAE;AAJQ,CAArB;AAOA,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,IAAD,EAAU;AAC1C,SAAO;AACLC,IAAAA,IAAI,EAAE,QADD;AAELD,IAAAA,IAAI,EAAJA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,IAAME,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AACvC,SAAO;AACLD,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,IAAME,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AACtC,SAAO;AACLF,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,IAAMG,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AACtC,SAAO;AACLH,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,IAAMI,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AACvC,SAAO;AACLJ,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,IAAMK,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AACvC,SAAO;AACLL,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM,C,CAMP;;AACA,gBAAe,YAAkC;AAAA,MAAjCM,KAAiC,uEAAzBb,YAAyB;AAAA,MAAXc,MAAW;;AAC/C,UAAQA,MAAM,CAACP,IAAf;AACE,SAAK,QAAL;AACE,6CACKM,KAAK,CAACX,EADX;AAEED,QAAAA,UAAU,EAAE,IAFd;AAGEC,QAAAA,EAAE,EAAEY,MAAM,CAACR;AAHb;;AAKF,SAAK,SAAL;AACE,6CACKO,KAAK,CAACX,EADX;AAEED,QAAAA,UAAU,EAAE,KAFd;AAGEC,QAAAA,EAAE,EAAE;AAHN;;AAKF;AACE,aAAOW,KAAP;AAdJ;AAgBD,CAjBD","sourcesContent":["const initialState = {\r\n  isLoggedIn: false,\r\n  me: null,\r\n  signUpData: {},\r\n  loginData: {},\r\n};\r\n\r\nexport const loginRequestAction = (data) => {\r\n  return {\r\n    type: \"LOG_IN\",\r\n    data,\r\n  };\r\n};\r\n\r\nexport const logoutRequestAction = () => {\r\n  return {\r\n    type: \"LOG_OUT\",\r\n  };\r\n};\r\n\r\nexport const loginSuccessAction = () => {\r\n  return {\r\n    type: \"LOG_IN_SUCCESS\",\r\n  };\r\n};\r\n\r\nexport const loginFailureAction = () => {\r\n  return {\r\n    type: \"LOG_IN_FAILURE\",\r\n  };\r\n};\r\n\r\nexport const logoutSuccessAction = () => {\r\n  return {\r\n    type: \"LOG_OUT_SUCCESS\",\r\n  };\r\n};\r\n\r\nexport const logoutFailureAction = () => {\r\n  return {\r\n    type: \"LOG_OUT_FAILURE\",\r\n  };\r\n};\r\n\r\n// (이전상태, 액션) => 다음상태\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"LOG_IN\":\r\n      return {\r\n        ...state.me,\r\n        isLoggedIn: true,\r\n        me: action.data,\r\n      };\r\n    case \"LOG_OUT\":\r\n      return {\r\n        ...state.me,\r\n        isLoggedIn: false,\r\n        me: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}