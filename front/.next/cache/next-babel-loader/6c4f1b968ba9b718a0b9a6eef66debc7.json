{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport produce from 'immer';\nexport const initialState = {\n  followLoading: false,\n  //로그인 시도중\n  followDone: false,\n  followError: null,\n  unfollowLoading: false,\n  //로그인 시도중\n  unfollowDone: false,\n  unfollowError: null,\n  logInLoading: false,\n  //로그인 시도중\n  logInDone: false,\n  logInError: null,\n  logOutLoading: false,\n  //로그아웃 시도중\n  logOutDone: false,\n  logOutError: null,\n  signUpLoading: false,\n  //회원가입 시도중\n  signUpDone: false,\n  signUpError: null,\n  changeNicknameLoading: false,\n  //닉네임 시도중\n  changeNicknameDone: false,\n  changeNicknameError: null,\n  me: null,\n  signUpData: {},\n  loginData: {}\n}; //redux-thunk\n// export const loginAction = (data) => (dispatch, getState) => {\n//   //initial State를 getState();\n//   const state = getState();\n//   dispatch(loginRequestAction());\n//   axios\n//     .post('/api/login')\n//     .then((res) => {\n//       dispatch(loginSuccessAction(res.data));\n//     })\n//     .catch((err) => {\n//       dispatch(loginFailureAction(err));\n//     });\n// };\n\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\n\nconst dummyUser = data => _objectSpread(_objectSpread({}, data), {}, {\n  nickname: '제로초',\n  id: 1,\n  Posts: [{\n    id: 1\n  }],\n  Followings: [{\n    nickname: '부기초'\n  }, {\n    nickname: '김재호'\n  }, {\n    nickname: '알던팍'\n  }],\n  Followers: [{\n    nickname: '부기초'\n  }, {\n    nickname: '김재호'\n  }, {\n    nickname: '알던팍'\n  }]\n}); ////// LOGIN 액션\n\n\nexport const loginRequestAction = data => {\n  return {\n    type: LOG_IN_REQUEST,\n    data\n  };\n}; // saga가 액션 만들어주므로 필요 없다\n// export const loginSuccessAction = (data) => {\n//   return {\n//     type: LOG_IN_SUCCESS,\n//     data,\n//   };\n// };\n// export const loginFailureAction = (data) => {\n//   return {\n//     type: LOG_IN_FAILURE,\n//     data,\n//   };\n// };\n// ////// LOGOUT 액션\n\nexport const logoutRequestAction = () => {\n  return {\n    type: LOG_OUT_REQUEST\n  };\n}; // export const logoutSuccessAction = () => {\n//   return {\n//     type: LOG_OUT_SUCCESS,\n//   };\n// };\n// export const logoutFailureAction = () => {\n//   return {\n//     type: LOG_OUT_FAILURE,\n//   };\n// };\n//reducer\n// (이전상태, 액션) => 다음상태\n\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        followLoading: true,\n        followError: null,\n        followDone: false\n      });\n\n    case FOLLOW_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        followLoading: false,\n        followDone: true,\n        me: state.me.Followings.push({\n          id: action.data\n        })\n      });\n\n    case FOLLOW_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        followLoading: false,\n        followError: action.error\n      });\n\n    case UNFOLLOW_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        unfollowLoading: true,\n        unfollowError: null,\n        unfollowDone: false\n      });\n\n    case UNFOLLOW_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        unfollowLoading: false,\n        unfollowDone: true,\n        me: state.me.Followings.push({\n          id: action.data\n        })\n      });\n\n    case UNFOLLOW_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        unfollowLoading: false,\n        unfollowError: action.error\n      });\n\n    case LOG_IN_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logInLoading: true,\n        logInError: null,\n        logInDone: false\n      });\n\n    case LOG_IN_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logInLoading: false,\n        logInDone: true,\n        me: dummyUser(action.data)\n      });\n\n    case LOG_IN_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logInLoading: false,\n        logInError: action.error\n      });\n\n    case LOG_OUT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logOutLoading: true,\n        logOutDone: false,\n        logOutError: null\n      });\n\n    case LOG_OUT_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logOutLoading: false,\n        logOutDone: true,\n        me: null\n      });\n\n    case LOG_OUT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logOutLoading: false,\n        logOutError: action.error\n      });\n\n    case SIGN_UP_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        signUpLoading: true,\n        signUpDone: false,\n        signUpError: null\n      });\n\n    case SIGN_UP_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        signUpLoading: false,\n        signUpDone: true\n      });\n\n    case SIGN_UP_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        signUpLoading: false,\n        signUpError: action.error\n      });\n\n    case CHANGE_NICKNAME_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        changeNicknameLoading: true,\n        changeNicknameDone: false,\n        changeNicknameError: null\n      });\n\n    case CHANGE_NICKNAME_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        changeNicknameLoading: false,\n        changeNicknameDone: true\n      });\n\n    case CHANGE_NICKNAME_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        changeNicknameLoading: false,\n        changeNicknameError: action.error\n      });\n\n    case ADD_POST_TO_ME:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        me: _objectSpread(_objectSpread({}, state.me), {}, {\n          Posts: [{\n            id: action.data\n          }, ...state.me.Posts]\n        })\n      });\n\n    case REMOVE_POST_OF_ME:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        me: _objectSpread(_objectSpread({}, state.me), {}, {\n          Posts: state.me.Posts.filter(v => v.id !== action.data)\n        })\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/code/Twitter/front/reducers/user.js"],"names":["produce","initialState","followLoading","followDone","followError","unfollowLoading","unfollowDone","unfollowError","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","signUpLoading","signUpDone","signUpError","changeNicknameLoading","changeNicknameDone","changeNicknameError","me","signUpData","loginData","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","dummyUser","data","nickname","id","Posts","Followings","Followers","loginRequestAction","type","logoutRequestAction","state","action","push","error","filter","v"],"mappings":"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","sourcesContent":["import produce from 'immer';\r\n\r\nexport const initialState = {\r\n  followLoading: false, //로그인 시도중\r\n  followDone: false,\r\n  followError: null,\r\n  unfollowLoading: false, //로그인 시도중\r\n  unfollowDone: false,\r\n  unfollowError: null,\r\n  logInLoading: false, //로그인 시도중\r\n  logInDone: false,\r\n  logInError: null,\r\n  logOutLoading: false, //로그아웃 시도중\r\n  logOutDone: false,\r\n  logOutError: null,\r\n  signUpLoading: false, //회원가입 시도중\r\n  signUpDone: false,\r\n  signUpError: null,\r\n  changeNicknameLoading: false, //닉네임 시도중\r\n  changeNicknameDone: false,\r\n  changeNicknameError: null,\r\n  me: null,\r\n  signUpData: {},\r\n  loginData: {},\r\n};\r\n\r\n//redux-thunk\r\n// export const loginAction = (data) => (dispatch, getState) => {\r\n//   //initial State를 getState();\r\n//   const state = getState();\r\n//   dispatch(loginRequestAction());\r\n//   axios\r\n//     .post('/api/login')\r\n//     .then((res) => {\r\n//       dispatch(loginSuccessAction(res.data));\r\n//     })\r\n//     .catch((err) => {\r\n//       dispatch(loginFailureAction(err));\r\n//     });\r\n// };\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\r\n\r\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\r\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\r\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\r\n\r\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\r\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\r\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\r\n\r\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\r\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\r\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\r\n\r\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\r\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\r\n\r\nconst dummyUser = (data) => ({\r\n  ...data,\r\n  nickname: '제로초',\r\n  id: 1,\r\n  Posts: [{ id: 1 }],\r\n  Followings: [\r\n    { nickname: '부기초' },\r\n    { nickname: '김재호' },\r\n    { nickname: '알던팍' },\r\n  ],\r\n  Followers: [\r\n    { nickname: '부기초' },\r\n    { nickname: '김재호' },\r\n    { nickname: '알던팍' },\r\n  ],\r\n});\r\n\r\n////// LOGIN 액션\r\nexport const loginRequestAction = (data) => {\r\n  return {\r\n    type: LOG_IN_REQUEST,\r\n    data,\r\n  };\r\n};\r\n\r\n// saga가 액션 만들어주므로 필요 없다\r\n// export const loginSuccessAction = (data) => {\r\n//   return {\r\n//     type: LOG_IN_SUCCESS,\r\n//     data,\r\n//   };\r\n// };\r\n// export const loginFailureAction = (data) => {\r\n//   return {\r\n//     type: LOG_IN_FAILURE,\r\n//     data,\r\n//   };\r\n// };\r\n\r\n// ////// LOGOUT 액션\r\n\r\nexport const logoutRequestAction = () => {\r\n  return {\r\n    type: LOG_OUT_REQUEST,\r\n  };\r\n};\r\n\r\n// export const logoutSuccessAction = () => {\r\n//   return {\r\n//     type: LOG_OUT_SUCCESS,\r\n//   };\r\n// };\r\n\r\n// export const logoutFailureAction = () => {\r\n//   return {\r\n//     type: LOG_OUT_FAILURE,\r\n//   };\r\n// };\r\n\r\n//reducer\r\n// (이전상태, 액션) => 다음상태\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FOLLOW_REQUEST:\r\n      return {\r\n        ...state,\r\n        followLoading: true,\r\n        followError: null,\r\n        followDone: false,\r\n      };\r\n    case FOLLOW_SUCCESS:\r\n      return {\r\n        ...state,\r\n        followLoading: false,\r\n        followDone: true,\r\n        me: state.me.Followings.push({ id: action.data }),\r\n      };\r\n    case FOLLOW_FAILURE:\r\n      return {\r\n        ...state,\r\n        followLoading: false,\r\n        followError: action.error,\r\n      };\r\n    case UNFOLLOW_REQUEST:\r\n      return {\r\n        ...state,\r\n        unfollowLoading: true,\r\n        unfollowError: null,\r\n        unfollowDone: false,\r\n      };\r\n    case UNFOLLOW_SUCCESS:\r\n      return {\r\n        ...state,\r\n        unfollowLoading: false,\r\n        unfollowDone: true,\r\n        me: state.me.Followings.push({ id: action.data }),\r\n      };\r\n    case UNFOLLOW_FAILURE:\r\n      return {\r\n        ...state,\r\n        unfollowLoading: false,\r\n        unfollowError: action.error,\r\n      };\r\n    case LOG_IN_REQUEST:\r\n      return {\r\n        ...state,\r\n        logInLoading: true,\r\n        logInError: null,\r\n        logInDone: false,\r\n      };\r\n    case LOG_IN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        logInLoading: false,\r\n        logInDone: true,\r\n        me: dummyUser(action.data),\r\n      };\r\n    case LOG_IN_FAILURE:\r\n      return {\r\n        ...state,\r\n        logInLoading: false,\r\n        logInError: action.error,\r\n      };\r\n    case LOG_OUT_REQUEST:\r\n      return {\r\n        ...state,\r\n        logOutLoading: true,\r\n        logOutDone: false,\r\n        logOutError: null,\r\n      };\r\n    case LOG_OUT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        logOutLoading: false,\r\n        logOutDone: true,\r\n        me: null,\r\n      };\r\n    case LOG_OUT_FAILURE:\r\n      return {\r\n        ...state,\r\n        logOutLoading: false,\r\n        logOutError: action.error,\r\n      };\r\n    case SIGN_UP_REQUEST:\r\n      return {\r\n        ...state,\r\n        signUpLoading: true,\r\n        signUpDone: false,\r\n        signUpError: null,\r\n      };\r\n    case SIGN_UP_SUCCESS:\r\n      return {\r\n        ...state,\r\n        signUpLoading: false,\r\n        signUpDone: true,\r\n      };\r\n    case SIGN_UP_FAILURE:\r\n      return {\r\n        ...state,\r\n        signUpLoading: false,\r\n        signUpError: action.error,\r\n      };\r\n    case CHANGE_NICKNAME_REQUEST:\r\n      return {\r\n        ...state,\r\n        changeNicknameLoading: true,\r\n        changeNicknameDone: false,\r\n        changeNicknameError: null,\r\n      };\r\n    case CHANGE_NICKNAME_SUCCESS:\r\n      return {\r\n        ...state,\r\n        changeNicknameLoading: false,\r\n        changeNicknameDone: true,\r\n      };\r\n    case CHANGE_NICKNAME_FAILURE:\r\n      return {\r\n        ...state,\r\n        changeNicknameLoading: false,\r\n        changeNicknameError: action.error,\r\n      };\r\n    case ADD_POST_TO_ME:\r\n      return {\r\n        ...state,\r\n        me: {\r\n          ...state.me,\r\n          Posts: [{ id: action.data }, ...state.me.Posts],\r\n        },\r\n      };\r\n    case REMOVE_POST_OF_ME:\r\n      return {\r\n        ...state,\r\n        me: {\r\n          ...state.me,\r\n          Posts: state.me.Posts.filter((v) => v.id !== action.data),\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}