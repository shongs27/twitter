{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar initialState = {\n  isLoggedIn: false,\n  me: null,\n  signUpData: {},\n  loginData: {}\n};\nexport var loginAction = function loginAction(data) {\n  return function (dispatch) {\n    dispatch(loginRequestAction());\n    axios.get(\"/api/login\").then(function (res) {\n      dispatch(loginSuccessAction(res.data));\n    })[\"catch\"](function (err) {\n      dispatch(loginFailureAction(err));\n    });\n  };\n};\nexport var loginRequestAction = function loginRequestAction(data) {\n  return {\n    type: \"LOG_IN\",\n    data: data\n  };\n};\nexport var logoutRequestAction = function logoutRequestAction(data) {\n  return {\n    type: \"LOG_OUT\",\n    data: data\n  };\n};\nexport var loginSuccessAction = function loginSuccessAction(data) {\n  return {\n    type: \"LOG_IN_SUCCESS\",\n    data: data\n  };\n};\nexport var loginFailureAction = function loginFailureAction(data) {\n  return {\n    type: \"LOG_IN_FAILURE\",\n    data: data\n  };\n};\nexport var logoutSuccessAction = function logoutSuccessAction(data) {\n  return {\n    type: \"LOG_OUT_SUCCESS\",\n    data: data\n  };\n};\nexport var logoutFailureAction = function logoutFailureAction(data) {\n  return {\n    type: \"LOG_OUT_FAILURE\",\n    data: data\n  };\n}; // (이전상태, 액션) => 다음상태\n\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"LOG_IN\":\n      return _objectSpread(_objectSpread({}, state.me), {}, {\n        isLoggedIn: true,\n        me: action.data\n      });\n\n    case \"LOG_OUT\":\n      return _objectSpread(_objectSpread({}, state.me), {}, {\n        isLoggedIn: false,\n        me: null\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/code/Twitter/front/reducers/user.js"],"names":["initialState","isLoggedIn","me","signUpData","loginData","loginAction","data","dispatch","loginRequestAction","axios","get","then","res","loginSuccessAction","err","loginFailureAction","type","logoutRequestAction","logoutSuccessAction","logoutFailureAction","state","action"],"mappings":";;;;;;AAAA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,KADO;AAEnBC,EAAAA,EAAE,EAAE,IAFe;AAGnBC,EAAAA,UAAU,EAAE,EAHO;AAInBC,EAAAA,SAAS,EAAE;AAJQ,CAArB;AAOA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,IAAD,EAAU;AACnC,SAAO,UAACC,QAAD,EAAc;AACnBA,IAAAA,QAAQ,CAACC,kBAAkB,EAAnB,CAAR;AACAC,IAAAA,KAAK,CACFC,GADH,CACO,YADP,EAEGC,IAFH,CAEQ,UAACC,GAAD,EAAS;AACbL,MAAAA,QAAQ,CAACM,kBAAkB,CAACD,GAAG,CAACN,IAAL,CAAnB,CAAR;AACD,KAJH,WAKS,UAACQ,GAAD,EAAS;AACdP,MAAAA,QAAQ,CAACQ,kBAAkB,CAACD,GAAD,CAAnB,CAAR;AACD,KAPH;AAQD,GAVD;AAWD,CAZM;AAcP,OAAO,IAAMN,kBAAkB,GAAG,SAArBA,kBAAqB,CAACF,IAAD,EAAU;AAC1C,SAAO;AACLU,IAAAA,IAAI,EAAE,QADD;AAELV,IAAAA,IAAI,EAAJA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,IAAMW,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACX,IAAD,EAAU;AAC3C,SAAO;AACLU,IAAAA,IAAI,EAAE,SADD;AAELV,IAAAA,IAAI,EAAJA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,IAAMO,kBAAkB,GAAG,SAArBA,kBAAqB,CAACP,IAAD,EAAU;AAC1C,SAAO;AACLU,IAAAA,IAAI,EAAE,gBADD;AAELV,IAAAA,IAAI,EAAJA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,IAAMS,kBAAkB,GAAG,SAArBA,kBAAqB,CAACT,IAAD,EAAU;AAC1C,SAAO;AACLU,IAAAA,IAAI,EAAE,gBADD;AAELV,IAAAA,IAAI,EAAJA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,IAAMY,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACZ,IAAD,EAAU;AAC3C,SAAO;AACLU,IAAAA,IAAI,EAAE,iBADD;AAELV,IAAAA,IAAI,EAAJA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,IAAMa,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACb,IAAD,EAAU;AAC3C,SAAO;AACLU,IAAAA,IAAI,EAAE,iBADD;AAELV,IAAAA,IAAI,EAAJA;AAFK,GAAP;AAID,CALM,C,CAOP;;AACA,gBAAe,YAAkC;AAAA,MAAjCc,KAAiC,uEAAzBpB,YAAyB;AAAA,MAAXqB,MAAW;;AAC/C,UAAQA,MAAM,CAACL,IAAf;AACE,SAAK,QAAL;AACE,6CACKI,KAAK,CAAClB,EADX;AAEED,QAAAA,UAAU,EAAE,IAFd;AAGEC,QAAAA,EAAE,EAAEmB,MAAM,CAACf;AAHb;;AAKF,SAAK,SAAL;AACE,6CACKc,KAAK,CAAClB,EADX;AAEED,QAAAA,UAAU,EAAE,KAFd;AAGEC,QAAAA,EAAE,EAAE;AAHN;;AAKF;AACE,aAAOkB,KAAP;AAdJ;AAgBD,CAjBD","sourcesContent":["const initialState = {\r\n  isLoggedIn: false,\r\n  me: null,\r\n  signUpData: {},\r\n  loginData: {},\r\n};\r\n\r\nexport const loginAction = (data) => {\r\n  return (dispatch) => {\r\n    dispatch(loginRequestAction());\r\n    axios\r\n      .get(\"/api/login\")\r\n      .then((res) => {\r\n        dispatch(loginSuccessAction(res.data));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(loginFailureAction(err));\r\n      });\r\n  };\r\n};\r\n\r\nexport const loginRequestAction = (data) => {\r\n  return {\r\n    type: \"LOG_IN\",\r\n    data,\r\n  };\r\n};\r\n\r\nexport const logoutRequestAction = (data) => {\r\n  return {\r\n    type: \"LOG_OUT\",\r\n    data,\r\n  };\r\n};\r\n\r\nexport const loginSuccessAction = (data) => {\r\n  return {\r\n    type: \"LOG_IN_SUCCESS\",\r\n    data,\r\n  };\r\n};\r\n\r\nexport const loginFailureAction = (data) => {\r\n  return {\r\n    type: \"LOG_IN_FAILURE\",\r\n    data,\r\n  };\r\n};\r\n\r\nexport const logoutSuccessAction = (data) => {\r\n  return {\r\n    type: \"LOG_OUT_SUCCESS\",\r\n    data,\r\n  };\r\n};\r\n\r\nexport const logoutFailureAction = (data) => {\r\n  return {\r\n    type: \"LOG_OUT_FAILURE\",\r\n    data,\r\n  };\r\n};\r\n\r\n// (이전상태, 액션) => 다음상태\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"LOG_IN\":\r\n      return {\r\n        ...state.me,\r\n        isLoggedIn: true,\r\n        me: action.data,\r\n      };\r\n    case \"LOG_OUT\":\r\n      return {\r\n        ...state.me,\r\n        isLoggedIn: false,\r\n        me: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}