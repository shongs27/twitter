{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst initialState = {\n  isLoggedIn: false,\n  me: null,\n  signUpData: {},\n  loginData: {}\n};\nexport const loginAction = data => {\n  return (dispatch, getState) => {\n    const state = getState();\n    dispatch(loginRequestAction());\n    axios.post(\"/api/login\").then(res => {\n      dispatch(loginSuccessAction(res.data));\n    }).catch(err => {\n      dispatch(loginFailureAction(err));\n    });\n  };\n};\nexport const loginRequestAction = data => {\n  return {\n    type: \"LOG_IN\",\n    data\n  };\n};\nexport const logoutRequestAction = data => {\n  return {\n    type: \"LOG_OUT\",\n    data\n  };\n};\nexport const loginSuccessAction = data => {\n  return {\n    type: \"LOG_IN_SUCCESS\",\n    data\n  };\n};\nexport const loginFailureAction = data => {\n  return {\n    type: \"LOG_IN_FAILURE\",\n    data\n  };\n};\nexport const logoutSuccessAction = data => {\n  return {\n    type: \"LOG_OUT_SUCCESS\",\n    data\n  };\n};\nexport const logoutFailureAction = data => {\n  return {\n    type: \"LOG_OUT_FAILURE\",\n    data\n  };\n}; // (이전상태, 액션) => 다음상태\n\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case \"LOG_IN\":\n      return _objectSpread(_objectSpread({}, state.me), {}, {\n        isLoggedIn: true,\n        me: action.data\n      });\n\n    case \"LOG_OUT\":\n      return _objectSpread(_objectSpread({}, state.me), {}, {\n        isLoggedIn: false,\n        me: null\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/code/Twitter/front/reducers/user.js"],"names":["initialState","isLoggedIn","me","signUpData","loginData","loginAction","data","dispatch","getState","state","loginRequestAction","axios","post","then","res","loginSuccessAction","catch","err","loginFailureAction","type","logoutRequestAction","logoutSuccessAction","logoutFailureAction","action"],"mappings":";;;;;;AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,KADO;AAEnBC,EAAAA,EAAE,EAAE,IAFe;AAGnBC,EAAAA,UAAU,EAAE,EAHO;AAInBC,EAAAA,SAAS,EAAE;AAJQ,CAArB;AAOA,OAAO,MAAMC,WAAW,GAAIC,IAAD,IAAU;AACnC,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC7B,UAAMC,KAAK,GAAGD,QAAQ,EAAtB;AACAD,IAAAA,QAAQ,CAACG,kBAAkB,EAAnB,CAAR;AACAC,IAAAA,KAAK,CACFC,IADH,CACQ,YADR,EAEGC,IAFH,CAESC,GAAD,IAAS;AACbP,MAAAA,QAAQ,CAACQ,kBAAkB,CAACD,GAAG,CAACR,IAAL,CAAnB,CAAR;AACD,KAJH,EAKGU,KALH,CAKUC,GAAD,IAAS;AACdV,MAAAA,QAAQ,CAACW,kBAAkB,CAACD,GAAD,CAAnB,CAAR;AACD,KAPH;AAQD,GAXD;AAYD,CAbM;AAeP,OAAO,MAAMP,kBAAkB,GAAIJ,IAAD,IAAU;AAC1C,SAAO;AACLa,IAAAA,IAAI,EAAE,QADD;AAELb,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,MAAMc,mBAAmB,GAAId,IAAD,IAAU;AAC3C,SAAO;AACLa,IAAAA,IAAI,EAAE,SADD;AAELb,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,MAAMS,kBAAkB,GAAIT,IAAD,IAAU;AAC1C,SAAO;AACLa,IAAAA,IAAI,EAAE,gBADD;AAELb,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,MAAMY,kBAAkB,GAAIZ,IAAD,IAAU;AAC1C,SAAO;AACLa,IAAAA,IAAI,EAAE,gBADD;AAELb,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,MAAMe,mBAAmB,GAAIf,IAAD,IAAU;AAC3C,SAAO;AACLa,IAAAA,IAAI,EAAE,iBADD;AAELb,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,MAAMgB,mBAAmB,GAAIhB,IAAD,IAAU;AAC3C,SAAO;AACLa,IAAAA,IAAI,EAAE,iBADD;AAELb,IAAAA;AAFK,GAAP;AAID,CALM,C,CAOP;;AACA,gBAAe,CAACG,KAAK,GAAGT,YAAT,EAAuBuB,MAAvB,KAAkC;AAC/C,UAAQA,MAAM,CAACJ,IAAf;AACE,SAAK,QAAL;AACE,6CACKV,KAAK,CAACP,EADX;AAEED,QAAAA,UAAU,EAAE,IAFd;AAGEC,QAAAA,EAAE,EAAEqB,MAAM,CAACjB;AAHb;;AAKF,SAAK,SAAL;AACE,6CACKG,KAAK,CAACP,EADX;AAEED,QAAAA,UAAU,EAAE,KAFd;AAGEC,QAAAA,EAAE,EAAE;AAHN;;AAKF;AACE,aAAOO,KAAP;AAdJ;AAgBD,CAjBD","sourcesContent":["const initialState = {\r\n  isLoggedIn: false,\r\n  me: null,\r\n  signUpData: {},\r\n  loginData: {},\r\n};\r\n\r\nexport const loginAction = (data) => {\r\n  return (dispatch, getState) => {\r\n    const state = getState();\r\n    dispatch(loginRequestAction());\r\n    axios\r\n      .post(\"/api/login\")\r\n      .then((res) => {\r\n        dispatch(loginSuccessAction(res.data));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(loginFailureAction(err));\r\n      });\r\n  };\r\n};\r\n\r\nexport const loginRequestAction = (data) => {\r\n  return {\r\n    type: \"LOG_IN\",\r\n    data,\r\n  };\r\n};\r\n\r\nexport const logoutRequestAction = (data) => {\r\n  return {\r\n    type: \"LOG_OUT\",\r\n    data,\r\n  };\r\n};\r\n\r\nexport const loginSuccessAction = (data) => {\r\n  return {\r\n    type: \"LOG_IN_SUCCESS\",\r\n    data,\r\n  };\r\n};\r\n\r\nexport const loginFailureAction = (data) => {\r\n  return {\r\n    type: \"LOG_IN_FAILURE\",\r\n    data,\r\n  };\r\n};\r\n\r\nexport const logoutSuccessAction = (data) => {\r\n  return {\r\n    type: \"LOG_OUT_SUCCESS\",\r\n    data,\r\n  };\r\n};\r\n\r\nexport const logoutFailureAction = (data) => {\r\n  return {\r\n    type: \"LOG_OUT_FAILURE\",\r\n    data,\r\n  };\r\n};\r\n\r\n// (이전상태, 액션) => 다음상태\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"LOG_IN\":\r\n      return {\r\n        ...state.me,\r\n        isLoggedIn: true,\r\n        me: action.data,\r\n      };\r\n    case \"LOG_OUT\":\r\n      return {\r\n        ...state.me,\r\n        isLoggedIn: false,\r\n        me: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}