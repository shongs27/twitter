{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\n//saga의 이펙트들\nimport { all, fork } from 'redux-saga/effects';\nimport axios from 'axios'; //take는 evnetlistener와 비슷\n// takeLeading - 매번 누를때 첫번째 응답만 반환\n// takeLatest - 매번 누를떄 마지막 응답만 반환\n// throttle - 아에 반복 요청이 안가도록 막아줌\n// (takeLatest, takeLeading과 다르게 백엔드에서 여러번 요청되었나 검사할 필요 없음)\n//fork는 응답을 기다리지 않는다\n//call은 응답을 기다린다\n\nimport postSaga from './post';\nimport userSaga from './user'; //baseURL을 설정해야 sagaAPI 요청 주소를 줄여쓸 수 있다\n\naxios.defaults.baseURL = 'http://localhost:8080';\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return all([fork(userSaga), fork(postSaga)]);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}","map":{"version":3,"sources":["C:/code/Twitter/front/sagas/index.js"],"names":["rootSaga","all","fork","axios","postSaga","userSaga","defaults","baseURL"],"mappings":";;oDAkByBA,Q;;AAlBzB;AACA,SAASC,GAAT,EAAcC,IAAd,QAA0B,oBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;AACA,OAAOC,QAAP,MAAqB,QAArB;AACA,OAAOC,QAAP,MAAqB,QAArB,C,CAEA;;AACAF,KAAK,CAACG,QAAN,CAAeC,OAAf,GAAyB,uBAAzB;AAEA,eAAe,SAAUP,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAMC,GAAG,CAAC,CAACC,IAAI,CAACG,QAAD,CAAL,EAAiBH,IAAI,CAACE,QAAD,CAArB,CAAD,CAAT;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["//saga의 이펙트들\r\nimport { all, fork } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\n\r\n//take는 evnetlistener와 비슷\r\n// takeLeading - 매번 누를때 첫번째 응답만 반환\r\n// takeLatest - 매번 누를떄 마지막 응답만 반환\r\n// throttle - 아에 반복 요청이 안가도록 막아줌\r\n// (takeLatest, takeLeading과 다르게 백엔드에서 여러번 요청되었나 검사할 필요 없음)\r\n\r\n//fork는 응답을 기다리지 않는다\r\n//call은 응답을 기다린다\r\nimport postSaga from './post';\r\nimport userSaga from './user';\r\n\r\n//baseURL을 설정해야 sagaAPI 요청 주소를 줄여쓸 수 있다\r\naxios.defaults.baseURL = 'http://localhost:8080';\r\n\r\nexport default function* rootSaga() {\r\n  yield all([fork(userSaga), fork(postSaga)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}