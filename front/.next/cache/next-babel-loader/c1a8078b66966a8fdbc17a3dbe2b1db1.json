{"ast":null,"code":"var _jsxFileName = \"C:\\\\code\\\\Twitter\\\\front\\\\components\\\\PostImages.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from \"react\";\nimport propTypes from \"prop-types\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction PostImages(_ref) {\n  _s();\n\n  var images = _ref.images;\n\n  var _useState = useState(\"\"),\n      ShowImagesZoom = _useState[0],\n      setShowImagesZoom = _useState[1];\n\n  var onZoom = useCallback(function () {\n    setShowImagesZoom(true);\n  }, []);\n\n  if (images.length === 1) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: images[0].src,\n        alt: images[0].src,\n        onClick: onZoom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n  if (images.length === 2) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          role: \"presentation\",\n          src: images[0].src,\n          alt: images[0].src,\n          width: \"50%\",\n          onClick: onZoom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          role: \"presentation\",\n          src: images[1].src,\n          alt: images[1].src,\n          width: \"50%\",\n          onClick: onZoom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: images[0].src,\n        alt: images[0].src,\n        style: {\n          width: \"50%\"\n        },\n        role: \"presentation\",\n        onClick: onZoom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"inline-block\",\n          width: \"50%\",\n          textAlign: \"center\",\n          verticalAlign: \"middle\"\n        },\n        role: \"presentation\",\n        onClick: onZoom,\n        children: [/*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), images.length - 1, \"\\uAC1C\\uC758 \\uC0AC\\uC9C4 \\uB354\\uBCF4\\uAE30\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: \"100px\",\n          verticalAlign: \"middle\"\n        },\n        children: \"\\uBC18\\uAC11\\uC2B5\\uB2C8\\uB2E4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}\n\n_s(PostImages, \"fZcjMOD3AJBKZ90lKjn9LGJbRsY=\");\n\n_c = PostImages;\nPostImages.propTypes = {\n  //배열 안에 객체 [{},{},{} ] 타입이 맞나 확인\n  images: propTypes.arrayOf(propTypes.object)\n};\nexport default PostImages;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostImages\");","map":{"version":3,"sources":["C:/code/Twitter/front/components/PostImages.js"],"names":["React","useState","useCallback","propTypes","PlusOutlined","PostImages","images","ShowImagesZoom","setShowImagesZoom","onZoom","length","src","width","display","textAlign","verticalAlign","height","arrayOf","object"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,YAAT,QAA6B,mBAA7B;;;;AAEA,SAASC,UAAT,OAAgC;AAAA;;AAAA,MAAVC,MAAU,QAAVA,MAAU;;AAC9B,kBAA4CL,QAAQ,CAAC,EAAD,CAApD;AAAA,MAAOM,cAAP;AAAA,MAAuBC,iBAAvB;;AACA,MAAMC,MAAM,GAAGP,WAAW,CAAC,YAAM;AAC/BM,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD,GAFyB,EAEvB,EAFuB,CAA1B;;AAIA,MAAIF,MAAM,CAACI,MAAP,KAAkB,CAAtB,EAAyB;AACvB,wBACE;AAAA,6BACE;AAAK,QAAA,GAAG,EAAEJ,MAAM,CAAC,CAAD,CAAN,CAAUK,GAApB;AAAyB,QAAA,GAAG,EAAEL,MAAM,CAAC,CAAD,CAAN,CAAUK,GAAxC;AAA6C,QAAA,OAAO,EAAEF;AAAtD;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AAKD;;AACD,MAAIH,MAAM,CAACI,MAAP,KAAkB,CAAtB,EAAyB;AACvB,wBACE;AAAA,6BACE;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,cADP;AAEE,UAAA,GAAG,EAAEJ,MAAM,CAAC,CAAD,CAAN,CAAUK,GAFjB;AAGE,UAAA,GAAG,EAAEL,MAAM,CAAC,CAAD,CAAN,CAAUK,GAHjB;AAIE,UAAA,KAAK,EAAC,KAJR;AAKE,UAAA,OAAO,EAAEF;AALX;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AACE,UAAA,IAAI,EAAC,cADP;AAEE,UAAA,GAAG,EAAEH,MAAM,CAAC,CAAD,CAAN,CAAUK,GAFjB;AAGE,UAAA,GAAG,EAAEL,MAAM,CAAC,CAAD,CAAN,CAAUK,GAHjB;AAIE,UAAA,KAAK,EAAC,KAJR;AAKE,UAAA,OAAO,EAAEF;AALX;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AAoBD,GArBD,MAqBO;AACL,wBACE;AAAA,8BACE;AACE,QAAA,GAAG,EAAEH,MAAM,CAAC,CAAD,CAAN,CAAUK,GADjB;AAEE,QAAA,GAAG,EAAEL,MAAM,CAAC,CAAD,CAAN,CAAUK,GAFjB;AAGE,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAHT;AAIE,QAAA,IAAI,EAAC,cAJP;AAKE,QAAA,OAAO,EAAEH;AALX;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AACE,QAAA,KAAK,EAAE;AACLI,UAAAA,OAAO,EAAE,cADJ;AAELD,UAAAA,KAAK,EAAE,KAFF;AAGLE,UAAAA,SAAS,EAAE,QAHN;AAILC,UAAAA,aAAa,EAAE;AAJV,SADT;AAOE,QAAA,IAAI,EAAC,cAPP;AAQE,QAAA,OAAO,EAAEN,MARX;AAAA,gCAUE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,gBAVF,EAWGH,MAAM,CAACI,MAAP,GAAgB,CAXnB;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eAqBE;AAAK,QAAA,KAAK,EAAE;AAAEM,UAAAA,MAAM,EAAE,OAAV;AAAmBD,UAAAA,aAAa,EAAE;AAAlC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArBF;AAAA,oBADF;AA2BD;AACF;;GA/DQV,U;;KAAAA,U;AAiETA,UAAU,CAACF,SAAX,GAAuB;AACrB;AACAG,EAAAA,MAAM,EAAEH,SAAS,CAACc,OAAV,CAAkBd,SAAS,CAACe,MAA5B;AAFa,CAAvB;AAKA,eAAeb,UAAf","sourcesContent":["import React, { useState, useCallback } from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\n\r\nfunction PostImages({ images }) {\r\n  const [ShowImagesZoom, setShowImagesZoom] = useState(\"\");\r\n  const onZoom = useCallback(() => {\r\n    setShowImagesZoom(true);\r\n  }, []);\r\n\r\n  if (images.length === 1) {\r\n    return (\r\n      <>\r\n        <img src={images[0].src} alt={images[0].src} onClick={onZoom} />\r\n      </>\r\n    );\r\n  }\r\n  if (images.length === 2) {\r\n    return (\r\n      <>\r\n        <div>\r\n          <img\r\n            role=\"presentation\"\r\n            src={images[0].src}\r\n            alt={images[0].src}\r\n            width=\"50%\"\r\n            onClick={onZoom}\r\n          />\r\n          <img\r\n            role=\"presentation\"\r\n            src={images[1].src}\r\n            alt={images[1].src}\r\n            width=\"50%\"\r\n            onClick={onZoom}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <img\r\n          src={images[0].src}\r\n          alt={images[0].src}\r\n          style={{ width: \"50%\" }}\r\n          role=\"presentation\"\r\n          onClick={onZoom}\r\n        />\r\n        <div\r\n          style={{\r\n            display: \"inline-block\",\r\n            width: \"50%\",\r\n            textAlign: \"center\",\r\n            verticalAlign: \"middle\",\r\n          }}\r\n          role=\"presentation\"\r\n          onClick={onZoom}\r\n        >\r\n          <PlusOutlined />\r\n          {images.length - 1}개의 사진 더보기\r\n        </div>\r\n        <div style={{ height: \"100px\", verticalAlign: \"middle\" }}>\r\n          반갑습니다\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nPostImages.propTypes = {\r\n  //배열 안에 객체 [{},{},{} ] 타입이 맞나 확인\r\n  images: propTypes.arrayOf(propTypes.object),\r\n};\r\n\r\nexport default PostImages;\r\n"]},"metadata":{},"sourceType":"module"}