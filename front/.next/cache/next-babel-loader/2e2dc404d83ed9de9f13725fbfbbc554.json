{"ast":null,"code":"var _jsxFileName = \"C:\\\\code\\\\Twitter\\\\front\\\\components\\\\FollowButton.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'antd';\nimport { useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport { UNFOLLOW_REQUEST } from '../reducers/user';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction FollowButton({\n  post\n}) {\n  const {\n    me\n  } = useSelector(state => state.user); //v.id가 있나?\n\n  const isFollowing = me && me.Followings.find(v => v.id === post.User.id);\n  const onClickButton = useCallback(() => {\n    if (isFollowing) {\n      dispatchEvent({\n        type: UNFOLLOW_REQUEST,\n        data: post.User.id\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      onClick: onClickButton,\n      children: \"\\uD314\\uB85C\\uC6B0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\nFollowButton.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default FollowButton;","map":{"version":3,"sources":["C:/code/Twitter/front/components/FollowButton.js"],"names":["React","PropTypes","Button","useCallback","useSelector","UNFOLLOW_REQUEST","FollowButton","post","me","state","user","isFollowing","Followings","find","v","id","User","onClickButton","dispatchEvent","type","data","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,gBAAT,QAAiC,kBAAjC;;;;AAEA,SAASC,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAgC;AAC9B,QAAM;AAAEC,IAAAA;AAAF,MAASJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA1B,CAD8B,CAE9B;;AACA,QAAMC,WAAW,GAAGH,EAAE,IAAIA,EAAE,CAACI,UAAH,CAAcC,IAAd,CAAoBC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASR,IAAI,CAACS,IAAL,CAAUD,EAA7C,CAA1B;AACA,QAAME,aAAa,GAAGd,WAAW,CAAC,MAAM;AACtC,QAAIQ,WAAJ,EAAiB;AACfO,MAAAA,aAAa,CAAC;AACZC,QAAAA,IAAI,EAAEd,gBADM;AAEZe,QAAAA,IAAI,EAAEb,IAAI,CAACS,IAAL,CAAUD;AAFJ,OAAD,CAAb;AAID;AACF,GAPgC,EAO9B,EAP8B,CAAjC;AAQA,sBACE;AAAA,2BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEE,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAKD;;AAEDX,YAAY,CAACe,SAAb,GAAyB;AACvBd,EAAAA,IAAI,EAAEN,SAAS,CAACqB,MAAV,CAAiBC;AADA,CAAzB;AAIA,eAAejB,YAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from 'antd';\r\nimport { useCallback } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { UNFOLLOW_REQUEST } from '../reducers/user';\r\n\r\nfunction FollowButton({ post }) {\r\n  const { me } = useSelector((state) => state.user);\r\n  //v.id가 있나?\r\n  const isFollowing = me && me.Followings.find((v) => v.id === post.User.id);\r\n  const onClickButton = useCallback(() => {\r\n    if (isFollowing) {\r\n      dispatchEvent({\r\n        type: UNFOLLOW_REQUEST,\r\n        data: post.User.id,\r\n      });\r\n    }\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Button onClick={onClickButton}>팔로우</Button>\r\n    </>\r\n  );\r\n}\r\n\r\nFollowButton.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default FollowButton;\r\n"]},"metadata":{},"sourceType":"module"}