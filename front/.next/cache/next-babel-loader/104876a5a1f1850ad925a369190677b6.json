{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\n//saga의 이펙트\nimport { all, call, fork, put, take, takeEvery, takeLeading, takeLatest, throttle, delay } from \"redux-saga/effects\"; //take - evnetlistener\n//takeLeading - 매번 누를때 첫번째꺼만\n//takeLatest - 매번 누를떄 같은 '응답' 취소하고 마지막꺼만\n// throttle - 아에 반복 요청이 안가도록 막아줌 (takeLatest와 다르게 백엔드에서 검사할 필요 없음)\n\nimport postSaga from \"./post\";\nimport userSaga from \"./user\";\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return all([fork(postSaga), fork(userSaga)]);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}","map":{"version":3,"sources":["C:/code/Twitter/front/sagas/index.js"],"names":["rootSaga","all","call","fork","put","take","takeEvery","takeLeading","takeLatest","throttle","delay","postSaga","userSaga"],"mappings":";;oDAqByBA,Q;;AArBzB;AACA,SACEC,GADF,EAEEC,IAFF,EAGEC,IAHF,EAIEC,GAJF,EAKEC,IALF,EAMEC,SANF,EAOEC,WAPF,EAQEC,UARF,EASEC,QATF,EAUEC,KAVF,QAWO,oBAXP,C,CAYA;AACA;AACA;AACA;;AAEA,OAAOC,QAAP,MAAqB,QAArB;AACA,OAAOC,QAAP,MAAqB,QAArB;AAEA,eAAe,SAAUZ,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAMC,GAAG,CAAC,CAACE,IAAI,CAACQ,QAAD,CAAL,EAAiBR,IAAI,CAACS,QAAD,CAArB,CAAD,CAAT;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["//saga의 이펙트\r\nimport {\r\n  all,\r\n  call,\r\n  fork,\r\n  put,\r\n  take,\r\n  takeEvery,\r\n  takeLeading,\r\n  takeLatest,\r\n  throttle,\r\n  delay,\r\n} from \"redux-saga/effects\";\r\n//take - evnetlistener\r\n//takeLeading - 매번 누를때 첫번째꺼만\r\n//takeLatest - 매번 누를떄 같은 '응답' 취소하고 마지막꺼만\r\n// throttle - 아에 반복 요청이 안가도록 막아줌 (takeLatest와 다르게 백엔드에서 검사할 필요 없음)\r\n\r\nimport postSaga from \"./post\";\r\nimport userSaga from \"./user\";\r\n\r\nexport default function* rootSaga() {\r\n  yield all([fork(postSaga), fork(userSaga)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}